version: 2.1
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/python:3.6
commands:
  install:
    steps:
      - checkout
      - run:
          name: Fix permissions
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          keys:
            - dependency-cache-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
            - dependency-cache-
      - run:
          # may fix build issues
          name: Ensure pip
          command: |
            curl -O https://bootstrap.pypa.io/get-pip.py
            python get-pip.py
      - run: pip install -U mkdocs ghp-import
      - save_cache:
          key: dependency-cache-{{ .Environment.CIRCLE_BUILD_NUM }}
          paths:
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
jobs:
  build:
    <<: *defaults
    steps:
      - install
      - run: mkdocs build
      - store_artifacts:
          path: site
      - deploy:
          name: if master; mkdocs gh-deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              SHA="$(git log -1 --pretty=format:%h)"
              git fetch origin gh-pages:gh-pages
              ghp-import site
              git checkout gh-pages
              if [[ "$(git diff origin/gh-pages --numstat | grep -v sitemap.xml.gz)" == 1$'\t'1$'\t'index.html ]]; then
                echo "Ignoring sitemap.xml.gz, only one line changed in index.html (assumed timestamp)"
                echo "Skipping already deployed master@$SHA"
              else
                git commit --amend -m "Deploy master@$SHA [ci skip]" --author "OpenWorm-bot <openworm-bot@noreply.users.github.com>"
                git remote set-url origin https://${GITHUB_API_TOKEN}@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git
                git push -f origin gh-pages
              fi
            fi
workflows:
  version: 2
  test:
    jobs:
      - build
  poll:
    triggers:
      - schedule:
          cron: "0 * * * *"  # every hour
          filters:
            branches:
              only:
                - master
    jobs:
      - build
